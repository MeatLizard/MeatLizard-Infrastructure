# Video Platform Nginx Configuration
# Handles web app, API, and CDN functionality

# Main web application server
server {
    listen 80;
    server_name localhost;
    client_max_body_size 10G;
    client_body_timeout 300s;
    client_header_timeout 60s;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Main web application
    location / {
        proxy_pass http://web_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API endpoints with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://web_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API response caching for GET requests
        proxy_cache api_cache;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Video upload endpoints with special handling
    location /api/video/upload {
        limit_req zone=upload burst=5 nodelay;
        
        proxy_pass http://web_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Large file upload settings
        client_max_body_size 10G;
        client_body_timeout 600s;
        proxy_request_buffering off;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }

    # Video streaming endpoints
    location /api/video/stream/ {
        limit_req zone=streaming burst=100 nodelay;
        
        proxy_pass http://web_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Streaming optimizations
        proxy_buffering off;
        proxy_cache off;
        
        # CORS headers for video streaming
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
    }

    # Direct S3/MinIO access for video content (CDN simulation)
    location /cdn/ {
        limit_req zone=streaming burst=200 nodelay;
        
        # Remove /cdn prefix and proxy to MinIO
        rewrite ^/cdn/(.*)$ /$1 break;
        proxy_pass http://minio_backend;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # CDN-style caching
        proxy_cache video_cache;
        proxy_cache_valid 200 206 1h;
        proxy_cache_valid 404 5m;
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        
        # Cache headers
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=3600";
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Thumbnail serving with aggressive caching
    location /cdn/thumbnails/ {
        limit_req zone=streaming burst=500 nodelay;
        
        # Remove /cdn prefix and proxy to MinIO
        rewrite ^/cdn/(.*)$ /$1 break;
        proxy_pass http://minio_backend;
        
        proxy_set_header Host $host;
        
        # Aggressive caching for thumbnails
        proxy_cache thumb_cache;
        proxy_cache_valid 200 30d;
        proxy_cache_valid 404 1h;
        proxy_cache_lock on;
        
        # Long-term cache headers
        add_header X-Cache-Status $upstream_cache_status;
        add_header Cache-Control "public, max-age=2592000"; # 30 days
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*";
    }

    # HLS streaming with optimized caching
    location /cdn/hls/ {
        limit_req zone=streaming burst=1000 nodelay;
        
        # Remove /cdn prefix and proxy to MinIO
        rewrite ^/cdn/(.*)$ /$1 break;
        proxy_pass http://minio_backend;
        
        proxy_set_header Host $host;
        
        # HLS-specific caching
        proxy_cache video_cache;
        
        # Different cache times for different HLS files
        location ~* \.m3u8$ {
            proxy_cache_valid 200 30s;  # Short cache for playlists
            add_header Cache-Control "public, max-age=30";
        }
        
        location ~* \.ts$ {
            proxy_cache_valid 200 1h;   # Longer cache for segments
            add_header Cache-Control "public, max-age=3600";
        }
        
        add_header X-Cache-Status $upstream_cache_status;
        
        # CORS headers for HLS
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Nginx status for monitoring
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 172.20.0.0/16;  # Docker network
        deny all;
    }
}

# MinIO console access (development only)
server {
    listen 9001;
    server_name localhost;
    
    location / {
        proxy_pass http://minio:9001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for MinIO console
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}