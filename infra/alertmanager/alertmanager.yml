# AlertManager Configuration for Video Platform
global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@meatlizard.com'
  smtp_auth_username: 'alerts@meatlizard.com'
  smtp_auth_password: 'your-smtp-password'

# Templates for alert notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'default-receiver'
  routes:
    # Critical alerts go to multiple channels
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 5m

    # Warning alerts
    - match:
        severity: warning
      receiver: 'warning-alerts'
      repeat_interval: 30m

    # Info alerts
    - match:
        severity: info
      receiver: 'info-alerts'
      repeat_interval: 2h

    # Video platform specific routing
    - match:
        service: transcoding
      receiver: 'transcoding-alerts'

    - match:
        service: import
      receiver: 'import-alerts'

# Inhibition rules to prevent spam
inhibit_rules:
  # Inhibit warning alerts if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'instance']

  # Inhibit individual service alerts if general service down alert is firing
  - source_match:
      alertname: 'ServiceDown'
    target_match_re:
      alertname: '.*'
    equal: ['instance']

# Receivers configuration
receivers:
  - name: 'default-receiver'
    webhook_configs:
      - url: 'http://web:8000/api/alerts/webhook'
        send_resolved: true

  - name: 'critical-alerts'
    email_configs:
      - to: 'admin@meatlizard.com'
        subject: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          Started: {{ .StartsAt }}
          {{ end }}
    
    webhook_configs:
      - url: 'http://web:8000/api/alerts/critical'
        send_resolved: true
    
    # Discord webhook for critical alerts (if configured)
    # webhook_configs:
    #   - url: 'https://discord.com/api/webhooks/YOUR_WEBHOOK_ID/YOUR_WEBHOOK_TOKEN'
    #     send_resolved: true

  - name: 'warning-alerts'
    email_configs:
      - to: 'alerts@meatlizard.com'
        subject: '‚ö†Ô∏è WARNING: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          Started: {{ .StartsAt }}
          {{ end }}

  - name: 'info-alerts'
    webhook_configs:
      - url: 'http://web:8000/api/alerts/info'
        send_resolved: true

  - name: 'transcoding-alerts'
    webhook_configs:
      - url: 'http://web:8000/api/alerts/transcoding'
        send_resolved: true
    email_configs:
      - to: 'transcoding-team@meatlizard.com'
        subject: 'üé¨ Transcoding Alert: {{ .GroupLabels.alertname }}'

  - name: 'import-alerts'
    webhook_configs:
      - url: 'http://web:8000/api/alerts/import'
        send_resolved: true
    email_configs:
      - to: 'import-team@meatlizard.com'
        subject: 'üì• Import Alert: {{ .GroupLabels.alertname }}'