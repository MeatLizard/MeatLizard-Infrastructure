"""Alembic script template.

This template is used by Alembic to generate new migration files.
"""
import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', '..', '..')))
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import JSONB


# revision identifiers, used by Alembic.
revision = '3cbf9f879422'
down_revision = '81ac4aba328c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('leaderboard_entries',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('leaderboard_name', sa.String(length=100), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('score', sa.BigInteger(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leaderboard_entries_leaderboard_name'), 'leaderboard_entries', ['leaderboard_name'], unique=False)
    op.create_index(op.f('ix_leaderboard_entries_user_id'), 'leaderboard_entries', ['user_id'], unique=False)
    op.create_table('analytics_events',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('content_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('data', JSONB(), nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_analytics_event_timestamp_type', 'analytics_events', [sa.text('timestamp DESC'), 'event_type'], unique=False)
    op.create_index(op.f('ix_analytics_events_content_id'), 'analytics_events', ['content_id'], unique=False)
    op.create_index(op.f('ix_analytics_events_event_type'), 'analytics_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_analytics_events_timestamp'), 'analytics_events', ['timestamp'], unique=False)
    op.create_index(op.f('ix_analytics_events_user_id'), 'analytics_events', ['user_id'], unique=False)
    op.add_column('ai_chat_messages', sa.Column('meta_data', JSONB(), nullable=True))
    op.add_column('content', sa.Column('moderation_flags', JSONB(), nullable=True))
    transcodingstatusenum = sa.Enum('pending', 'processing', 'completed', 'failed', name='transcodingstatusenum')
    transcodingstatusenum.create(op.get_bind())
    op.add_column('media_files', sa.Column('transcoding_status', transcodingstatusenum, nullable=False))
    op.add_column('media_files', sa.Column('transcoding_error', sa.Text(), nullable=True))
    op.add_column('media_files', sa.Column('transcoded_files', JSONB(), nullable=True))
    op.add_column('pastes', sa.Column('view_count', sa.Integer(), nullable=False))
    op.add_column('reactions', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('tier_configurations', sa.Column('storage_quota_bytes', sa.BigInteger(), server_default='0', nullable=False))
    op.add_column('tier_configurations', sa.Column('max_file_size_bytes', sa.BigInteger(), server_default='0', nullable=False))
    op.add_column('url_shortener', sa.Column('password_hash', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('vanity_slug', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('custom_domain', sa.String(length=255), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_unique_constraint(None, 'users', ['vanity_slug'])
    op.create_unique_constraint(None, 'users', ['custom_domain'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('login_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('users', sa.Column('preferences', sa.TEXT(), nullable=False))
    op.add_column('users', sa.Column('discord_linked_at', sa.DATETIME(), nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('users', sa.Column('last_login', sa.DATETIME(), nullable=True))
    op.add_column('users', sa.Column('discord_username', sa.VARCHAR(length=100), nullable=True))
    op.add_column('users', sa.Column('discord_id', sa.BIGINT(), nullable=True))
    op.add_column('users', sa.Column('password_reset_expires', sa.DATETIME(), nullable=True))
    op.add_column('users', sa.Column('email_verification_token', sa.VARCHAR(length=255), nullable=True))
    op.add_column('users', sa.Column('password_reset_token', sa.VARCHAR(length=255), nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('unique_user_email', 'users', ['email'])
    op.create_index('idx_users_last_login', 'users', ['last_login'], unique=False)
    op.create_index('idx_users_email_verified', 'users', ['email_verified'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_discord_username', 'users', ['discord_username'], unique=False)
    op.create_index('idx_users_discord_id', 'users', ['discord_id'], unique=False)
    op.create_index('idx_users_active', 'users', ['is_active'], unique=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('users', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.drop_column('users', 'custom_domain')
    op.drop_column('users', 'vanity_slug')
    op.alter_column('url_shortener', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.drop_column('url_shortener', 'password_hash')
    op.add_column('tier_configurations', sa.Column('media_storage_quota_gb', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('messages_per_day', sa.INTEGER(), nullable=False))
    op.add_column('tier_configurations', sa.Column('max_pastes', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('storage_quota_gb', sa.INTEGER(), server_default=sa.text("'1'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('support_level', sa.VARCHAR(length=20), nullable=False))
    op.add_column('tier_configurations', sa.Column('private_pastes', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('price_yearly', sa.NUMERIC(precision=10, scale=2), nullable=True))
    op.add_column('tier_configurations', sa.Column('max_message_length', sa.INTEGER(), nullable=False))
    op.add_column('tier_configurations', sa.Column('url_shortener_enabled', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('restrictions', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('media_upload_enabled', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('messages_per_month', sa.INTEGER(), nullable=False))
    op.add_column('tier_configurations', sa.Column('max_paste_ttl_days', sa.INTEGER(), server_default=sa.text("'30'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('custom_vanity_slugs', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('features', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('transcript_retention_days', sa.INTEGER(), nullable=False))
    op.add_column('tier_configurations', sa.Column('advanced_features', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('price_monthly', sa.NUMERIC(precision=10, scale=2), nullable=True))
    op.add_column('tier_configurations', sa.Column('priority_queue_access', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('updated_at', sa.DATETIME(), nullable=False))
    op.add_column('tier_configurations', sa.Column('max_short_urls', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('pastebin_enabled', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('description', sa.TEXT(), nullable=True))
    op.add_column('tier_configurations', sa.Column('api_access', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False))
    op.add_column('tier_configurations', sa.Column('max_concurrent_sessions', sa.INTEGER(), nullable=False))
    op.add_column('tier_configurations', sa.Column('messages_per_hour', sa.INTEGER(), nullable=False))
    op.drop_column('tier_configurations', 'max_file_size_bytes')
    op.drop_column('tier_configurations', 'storage_quota_bytes')
    op.alter_column('reactions', 'content_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('reactions', 'user_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('reactions', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.drop_column('reactions', 'created_at')
    op.add_column('playlists', sa.Column('user_id', sa.VARCHAR(length=32), nullable=False))
    op.add_column('playlists', sa.Column('created_at', sa.DATETIME(), nullable=False))
    op.drop_constraint(None, 'playlists', type_='foreignkey')
    op.create_foreign_key(None, 'playlists', 'users', ['user_id'], ['id'])
    op.create_index('idx_playlists_user', 'playlists', ['user_id'], unique=False)
    op.create_index('idx_playlists_public', 'playlists', ['is_public'], unique=False)
    op.create_index('idx_playlists_created', 'playlists', ['created_at'], unique=False)
    op.alter_column('playlists', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.add_column('playlist_items', sa.Column('added_at', sa.DATETIME(), nullable=False))
    op.drop_index(op.f('ix_playlist_items_playlist_id'), table_name='playlist_items')
    op.drop_index(op.f('ix_playlist_items_media_file_id'), table_name='playlist_items')
    op.create_index('idx_playlist_items_position', 'playlist_items', ['position'], unique=False)
    op.create_index('idx_playlist_items_playlist', 'playlist_items', ['playlist_id'], unique=False)
    op.create_index('idx_playlist_items_media', 'playlist_items', ['media_file_id'], unique=False)
    op.alter_column('playlist_items', 'media_file_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('playlist_items', 'playlist_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('playlist_items', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.add_column('pastes', sa.Column('current_views', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('pastes', sa.Column('privacy_level', sa.VARCHAR(length=8), server_default=sa.text("'public'"), nullable=False))
    op.add_column('pastes', sa.Column('user_id', sa.VARCHAR(length=32), nullable=True))
    op.add_column('pastes', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False))
    op.add_column('pastes', sa.Column('created_at', sa.DATETIME(), nullable=False))
    op.add_column('pastes', sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False))
    op.drop_constraint(None, 'pastes', type_='foreignkey')
    op.create_foreign_key(None, 'pastes', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_pastes_paste_id'), table_name='pastes')
    op.drop_index('ix_pastes_expires_at', table_name='pastes', postgresql_where=sa.text('expires_at IS NOT NULL'))
    op.create_index('idx_pastes_user', 'pastes', ['user_id'], unique=False)
    op.create_index('idx_pastes_privacy', 'pastes', ['privacy_level'], unique=False)
    op.create_index('idx_pastes_paste_id', 'pastes', ['paste_id'], unique=False)
    op.create_index('idx_pastes_expires', 'pastes', ['expires_at'], unique=False)
    op.create_index('idx_pastes_created', 'pastes', ['created_at'], unique=False)
    op.create_index('idx_pastes_active', 'pastes', ['is_active'], unique=False)
    op.alter_column('pastes', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.drop_column('pastes', 'view_count')
    op.add_column('media_files', sa.Column('duration_seconds', sa.INTEGER(), nullable=True))
    op.add_column('media_files', sa.Column('processing_status', sa.VARCHAR(length=10), server_default=sa.text("'pending'"), nullable=False))
    op.add_column('media_files', sa.Column('height', sa.INTEGER(), nullable=True))
    op.add_column('media_files', sa.Column('width', sa.INTEGER(), nullable=True))
    op.add_column('media_files', sa.Column('privacy_level', sa.VARCHAR(length=8), server_default=sa.text("'public'"), nullable=False))
    op.add_column('media_files', sa.Column('user_id', sa.VARCHAR(length=32), nullable=False))
    op.add_column('media_files', sa.Column('hls_playlist_path', sa.TEXT(), nullable=True))
    op.add_column('media_files', sa.Column('description', sa.TEXT(), nullable=True))
    op.add_column('media_files', sa.Column('title', sa.VARCHAR(length=255), nullable=True))
    op.add_column('media_files', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False))
    op.add_column('media_files', sa.Column('created_at', sa.DATETIME(), nullable=False))
    op.add_column('media_files', sa.Column('thumbnail_path', sa.TEXT(), nullable=True))
    op.add_column('media_files', sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False))
    op.drop_constraint(None, 'media_files', type_='foreignkey')
    op.create_foreign_key(None, 'media_files', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_media_files_media_id'), table_name='media_files')
    op.create_index('idx_media_files_user', 'media_files', ['user_id'], unique=False)
    op.create_index('idx_media_files_status', 'media_files', ['processing_status'], unique=False)
    op.create_index('idx_media_files_privacy', 'media_files', ['privacy_level'], unique=False)
    op.create_index('idx_media_files_mime_type', 'media_files', ['mime_type'], unique=False)
    op.create_index('idx_media_files_media_id', 'media_files', ['media_id'], unique=False)
    op.create_index('idx_media_files_created', 'media_files', ['created_at'], unique=False)
    op.create_index('idx_media_files_active', 'media_files', ['is_active'], unique=False)
    op.alter_column('media_files', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.drop_column('media_files', 'transcoded_files')
    op.drop_column('media_files', 'transcoding_error')
    op.drop_column('media_files', 'transcoding_status')
    op.alter_column('content', 'user_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('content', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.drop_column('content', 'moderation_flags')
    op.alter_column('comments', 'parent_content_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('comments', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('ai_chat_sessions', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('ai_chat_messages', 'session_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('ai_chat_messages', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.drop_column('ai_chat_messages', 'meta_data')
    op.create_table('email_personalization_rules',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('rule_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('conditions', sa.TEXT(), nullable=False),
    sa.Column('actions', sa.TEXT(), nullable=False),
    sa.Column('priority', sa.INTEGER(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('usage_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_personalization_rules_user', 'email_personalization_rules', ['user_id'], unique=False)
    op.create_index('idx_email_personalization_rules_priority', 'email_personalization_rules', ['priority'], unique=False)
    op.create_index('idx_email_personalization_rules_active', 'email_personalization_rules', ['is_active'], unique=False)
    op.create_table('email_ab_tests',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('test_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('hypothesis', sa.TEXT(), nullable=False),
    sa.Column('variant_a_template_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('variant_b_template_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('traffic_split', sa.FLOAT(), server_default=sa.text("'0.5'"), nullable=False),
    sa.Column('success_metric', sa.VARCHAR(length=50), nullable=False),
    sa.Column('confidence_level', sa.FLOAT(), server_default=sa.text("'0.95'"), nullable=False),
    sa.Column('minimum_sample_size', sa.INTEGER(), server_default=sa.text("'100'"), nullable=False),
    sa.Column('status', sa.VARCHAR(length=9), server_default=sa.text("'draft'"), nullable=False),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('end_date', sa.DATETIME(), nullable=True),
    sa.Column('winner_variant', sa.VARCHAR(length=1), nullable=True),
    sa.Column('statistical_significance', sa.FLOAT(), nullable=True),
    sa.Column('results', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['variant_a_template_id'], ['email_prompt_templates.id'], ),
    sa.ForeignKeyConstraint(['variant_b_template_id'], ['email_prompt_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_ab_tests_user', 'email_ab_tests', ['user_id'], unique=False)
    op.create_index('idx_email_ab_tests_status', 'email_ab_tests', ['status'], unique=False)
    op.create_index('idx_email_ab_tests_dates', 'email_ab_tests', ['start_date', 'end_date'], unique=False)
    op.create_table('user_storage_usage',
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('used_bytes', sa.BIGINT(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('quota_bytes', sa.BIGINT(), nullable=False),
    sa.Column('last_calculated', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index('idx_user_storage_usage_user', 'user_storage_usage', ['user_id'], unique=False)
    op.create_index('idx_user_storage_usage_calculated', 'user_storage_usage', ['last_calculated'], unique=False)
    op.create_table('email_templates',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('template_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('subject_template', sa.VARCHAR(length=255), nullable=True),
    sa.Column('body_template', sa.TEXT(), nullable=False),
    sa.Column('is_html', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('is_default', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_templates_user', 'email_templates', ['user_id'], unique=False)
    op.create_index('idx_email_templates_default', 'email_templates', ['is_default'], unique=False)
    op.create_table('rate_limits',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('endpoint', sa.VARCHAR(length=100), nullable=False),
    sa.Column('requests_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('window_start', sa.DATETIME(), nullable=False),
    sa.Column('window_end', sa.DATETIME(), nullable=False),
    sa.Column('tier', sa.VARCHAR(length=8), nullable=False),
    sa.Column('limit_exceeded', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_rate_limits_window', 'rate_limits', ['window_start', 'window_end'], unique=False)
    op.create_index('idx_rate_limits_user_endpoint', 'rate_limits', ['user_id', 'endpoint'], unique=False)
    op.create_index('idx_rate_limits_tier', 'rate_limits', ['tier'], unique=False)
    op.create_table('email_messages',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('email_account_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('folder_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('message_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('thread_id', sa.VARCHAR(length=255), nullable=True),
    sa.Column('from_address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('to_addresses', sa.TEXT(), nullable=False),
    sa.Column('cc_addresses', sa.TEXT(), nullable=True),
    sa.Column('bcc_addresses', sa.TEXT(), nullable=True),
    sa.Column('subject', sa.TEXT(), nullable=True),
    sa.Column('body_text', sa.TEXT(), nullable=True),
    sa.Column('body_html', sa.TEXT(), nullable=True),
    sa.Column('attachments', sa.TEXT(), nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('is_starred', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('is_draft', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('priority', sa.INTEGER(), server_default=sa.text("'3'"), nullable=False),
    sa.Column('size_bytes', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('received_at', sa.DATETIME(), nullable=False),
    sa.Column('sent_at', sa.DATETIME(), nullable=True),
    sa.Column('headers', sa.TEXT(), nullable=True),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['email_account_id'], ['email_accounts.id'], ),
    sa.ForeignKeyConstraint(['folder_id'], ['email_folders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_messages_thread', 'email_messages', ['thread_id'], unique=False)
    op.create_index('idx_email_messages_received', 'email_messages', ['received_at'], unique=False)
    op.create_index('idx_email_messages_read', 'email_messages', ['is_read'], unique=False)
    op.create_index('idx_email_messages_from', 'email_messages', ['from_address'], unique=False)
    op.create_index('idx_email_messages_folder', 'email_messages', ['folder_id'], unique=False)
    op.create_index('idx_email_messages_account', 'email_messages', ['email_account_id'], unique=False)
    op.create_table('email_contacts',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('email_address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('organization', sa.VARCHAR(length=255), nullable=True),
    sa.Column('phone', sa.VARCHAR(length=50), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('is_favorite', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_contacts_user', 'email_contacts', ['user_id'], unique=False)
    op.create_index('idx_email_contacts_name', 'email_contacts', ['display_name'], unique=False)
    op.create_index('idx_email_contacts_email', 'email_contacts', ['email_address'], unique=False)
    op.create_table('paste_access_logs',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('paste_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('ip_hash', sa.VARCHAR(length=64), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('accessed_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['paste_id'], ['pastes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_paste_access_logs_paste', 'paste_access_logs', ['paste_id'], unique=False)
    op.create_index('idx_paste_access_logs_accessed', 'paste_access_logs', ['accessed_at'], unique=False)
    op.create_table('metrics',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('client_bot_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('metric_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('metric_data', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_metrics_type', 'metrics', ['metric_type'], unique=False)
    op.create_index('idx_metrics_timestamp', 'metrics', ['timestamp'], unique=False)
    op.create_index('idx_metrics_client_bot', 'metrics', ['client_bot_id'], unique=False)
    op.create_table('media_likes',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('media_file_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('is_like', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['media_file_id'], ['media_files.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('media_file_id', 'user_id', name='unique_media_user_like')
    )
    op.create_index('idx_media_likes_user', 'media_likes', ['user_id'], unique=False)
    op.create_index('idx_media_likes_media', 'media_likes', ['media_file_id'], unique=False)
    op.create_index('idx_media_likes_created', 'media_likes', ['created_at'], unique=False)
    op.create_table('email_workflows',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('workflow_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('workflow_type', sa.VARCHAR(length=18), nullable=False),
    sa.Column('steps', sa.TEXT(), nullable=False),
    sa.Column('trigger_conditions', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.Column('schedule_config', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('execution_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('success_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('last_executed', sa.DATETIME(), nullable=True),
    sa.Column('next_execution', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_workflows_user', 'email_workflows', ['user_id'], unique=False)
    op.create_index('idx_email_workflows_type', 'email_workflows', ['workflow_type'], unique=False)
    op.create_index('idx_email_workflows_next_execution', 'email_workflows', ['next_execution'], unique=False)
    op.create_index('idx_email_workflows_active', 'email_workflows', ['is_active'], unique=False)
    op.create_table('email_folders',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('email_account_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('folder_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('folder_type', sa.VARCHAR(length=6), server_default=sa.text("'custom'"), nullable=False),
    sa.Column('parent_folder_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('message_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('unread_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('settings', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['email_account_id'], ['email_accounts.id'], ),
    sa.ForeignKeyConstraint(['parent_folder_id'], ['email_folders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_folders_type', 'email_folders', ['folder_type'], unique=False)
    op.create_index('idx_email_folders_parent', 'email_folders', ['parent_folder_id'], unique=False)
    op.create_index('idx_email_folders_account', 'email_folders', ['email_account_id'], unique=False)
    op.create_table('short_urls',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('slug', sa.VARCHAR(length=50), nullable=False),
    sa.Column('target_url', sa.TEXT(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_custom_slug', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('expires_at', sa.DATETIME(), nullable=True),
    sa.Column('max_clicks', sa.INTEGER(), nullable=True),
    sa.Column('current_clicks', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index('idx_short_urls_user', 'short_urls', ['user_id'], unique=False)
    op.create_index('idx_short_urls_slug', 'short_urls', ['slug'], unique=False)
    op.create_index('idx_short_urls_expires', 'short_urls', ['expires_at'], unique=False)
    op.create_index('idx_short_urls_created', 'short_urls', ['created_at'], unique=False)
    op.create_index('idx_short_urls_active', 'short_urls', ['is_active'], unique=False)
    op.create_table('transcripts',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('s3_key', sa.VARCHAR(length=500), nullable=True),
    sa.Column('format', sa.VARCHAR(length=4), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('file_size_bytes', sa.INTEGER(), nullable=True),
    sa.Column('message_count', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_transcripts_session', 'transcripts', ['session_id'], unique=False)
    op.create_index('idx_transcripts_format', 'transcripts', ['format'], unique=False)
    op.create_index('idx_transcripts_created_at', 'transcripts', ['created_at'], unique=False)
    op.create_table('media_comments',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('media_file_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('is_approved', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['media_file_id'], ['media_files.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_media_comments_user', 'media_comments', ['user_id'], unique=False)
    op.create_index('idx_media_comments_media', 'media_comments', ['media_file_id'], unique=False)
    op.create_index('idx_media_comments_created', 'media_comments', ['created_at'], unique=False)
    op.create_index('idx_media_comments_approved', 'media_comments', ['is_approved'], unique=False)
    op.create_table('user_usage_stats',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('messages_sent', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('ai_responses_received', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('sessions_created', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('total_tokens_used', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('premium_features_used', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('api_calls_made', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('tier_at_time', sa.VARCHAR(length=8), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='unique_user_date_stats')
    )
    op.create_index('idx_usage_stats_user_date', 'user_usage_stats', ['user_id', 'date'], unique=False)
    op.create_index('idx_usage_stats_tier', 'user_usage_stats', ['tier_at_time'], unique=False)
    op.create_index('idx_usage_stats_date', 'user_usage_stats', ['date'], unique=False)
    op.create_table('backup_logs',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('backup_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('status', sa.VARCHAR(length=11), nullable=False),
    sa.Column('started_at', sa.DATETIME(), nullable=False),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('file_path', sa.VARCHAR(length=500), nullable=True),
    sa.Column('file_size_bytes', sa.BIGINT(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_backup_logs_type', 'backup_logs', ['backup_type'], unique=False)
    op.create_index('idx_backup_logs_status', 'backup_logs', ['status'], unique=False)
    op.create_index('idx_backup_logs_started_at', 'backup_logs', ['started_at'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('action', sa.VARCHAR(length=100), nullable=False),
    sa.Column('resource_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('resource_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('old_values', sa.TEXT(), nullable=True),
    sa.Column('new_values', sa.TEXT(), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_user', 'audit_logs', ['user_id'], unique=False)
    op.create_index('idx_audit_logs_timestamp', 'audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_audit_logs_resource', 'audit_logs', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action'], unique=False)
    op.create_table('scheduled_emails',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('email_account_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('template_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('recipient_email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('recipient_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('subject', sa.VARCHAR(length=255), nullable=False),
    sa.Column('variables', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.Column('generated_content_text', sa.TEXT(), nullable=True),
    sa.Column('generated_content_html', sa.TEXT(), nullable=True),
    sa.Column('scheduled_for', sa.DATETIME(), nullable=False),
    sa.Column('optimal_send_time', sa.DATETIME(), nullable=True),
    sa.Column('time_zone', sa.VARCHAR(length=50), nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), server_default=sa.text("'draft'"), nullable=False),
    sa.Column('priority', sa.INTEGER(), server_default=sa.text("'3'"), nullable=False),
    sa.Column('retry_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('sent_at', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['email_account_id'], ['email_accounts.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['email_prompt_templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_scheduled_emails_user', 'scheduled_emails', ['user_id'], unique=False)
    op.create_index('idx_scheduled_emails_status', 'scheduled_emails', ['status'], unique=False)
    op.create_index('idx_scheduled_emails_scheduled_for', 'scheduled_emails', ['scheduled_for'], unique=False)
    op.create_index('idx_scheduled_emails_priority', 'scheduled_emails', ['priority'], unique=False)
    op.create_index('idx_scheduled_emails_optimal_time', 'scheduled_emails', ['optimal_send_time'], unique=False)
    op.create_table('payment_transactions',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('transaction_id', sa.VARCHAR(length=100), nullable=False),
    sa.Column('payment_provider', sa.VARCHAR(length=50), nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), nullable=False),
    sa.Column('tier_purchased', sa.VARCHAR(length=8), nullable=False),
    sa.Column('billing_period', sa.VARCHAR(length=20), nullable=False),
    sa.Column('status', sa.VARCHAR(length=9), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id', name='unique_transaction_id')
    )
    op.create_index('idx_payment_transactions_user', 'payment_transactions', ['user_id'], unique=False)
    op.create_index('idx_payment_transactions_status', 'payment_transactions', ['status'], unique=False)
    op.create_index('idx_payment_transactions_created', 'payment_transactions', ['created_at'], unique=False)
    op.create_table('user_tiers',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('tier', sa.VARCHAR(length=8), nullable=False),
    sa.Column('started_at', sa.DATETIME(), nullable=False),
    sa.Column('expires_at', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('auto_renew', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('payment_method_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('subscription_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_tiers_user_id', 'user_tiers', ['user_id'], unique=False)
    op.create_index('idx_user_tiers_tier', 'user_tiers', ['tier'], unique=False)
    op.create_index('idx_user_tiers_expires', 'user_tiers', ['expires_at'], unique=False)
    op.create_index('idx_user_tiers_active', 'user_tiers', ['is_active'], unique=False)
    op.create_table('system_configs',
    sa.Column('key', sa.VARCHAR(length=100), nullable=False),
    sa.Column('value', sa.TEXT(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_by', sa.VARCHAR(length=32), nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('email_aliases',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('alias_address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('destination_address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('alias_address', name='unique_alias_address')
    )
    op.create_index('idx_email_aliases_user', 'email_aliases', ['user_id'], unique=False)
    op.create_index('idx_email_aliases_destination', 'email_aliases', ['destination_address'], unique=False)
    op.create_index('idx_email_aliases_active', 'email_aliases', ['is_active'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('owner_user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('origin', sa.VARCHAR(length=7), nullable=False),
    sa.Column('discord_channel_id', sa.BIGINT(), nullable=True),
    sa.Column('system_prompt', sa.TEXT(), nullable=True),
    sa.Column('parameters', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('ended_at', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('discord_channel_id')
    )
    op.create_index('idx_sessions_owner', 'sessions', ['owner_user_id'], unique=False)
    op.create_index('idx_sessions_origin', 'sessions', ['origin'], unique=False)
    op.create_index('idx_sessions_discord_channel', 'sessions', ['discord_channel_id'], unique=False)
    op.create_index('idx_sessions_created_at', 'sessions', ['created_at'], unique=False)
    op.create_index('idx_sessions_active', 'sessions', ['is_active'], unique=False)
    op.create_table('short_url_access_logs',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('short_url_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('ip_hash', sa.VARCHAR(length=64), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('referrer', sa.TEXT(), nullable=True),
    sa.Column('country_code', sa.VARCHAR(length=2), nullable=True),
    sa.Column('accessed_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['short_url_id'], ['short_urls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_short_url_access_logs_url', 'short_url_access_logs', ['short_url_id'], unique=False)
    op.create_index('idx_short_url_access_logs_ip', 'short_url_access_logs', ['ip_hash'], unique=False)
    op.create_index('idx_short_url_access_logs_accessed', 'short_url_access_logs', ['accessed_at'], unique=False)
    op.create_table('email_generation_logs',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('template_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('scheduled_email_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('prompt_used', sa.TEXT(), nullable=False),
    sa.Column('variables_used', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.Column('generated_content', sa.TEXT(), nullable=True),
    sa.Column('generation_time_ms', sa.INTEGER(), nullable=False),
    sa.Column('tokens_used', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('quality_score', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=8), nullable=False),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('model_version', sa.VARCHAR(length=50), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['scheduled_email_id'], ['scheduled_emails.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['email_prompt_templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_generation_logs_user', 'email_generation_logs', ['user_id'], unique=False)
    op.create_index('idx_email_generation_logs_template', 'email_generation_logs', ['template_id'], unique=False)
    op.create_index('idx_email_generation_logs_status', 'email_generation_logs', ['status'], unique=False)
    op.create_index('idx_email_generation_logs_created', 'email_generation_logs', ['created_at'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('request_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('role', sa.VARCHAR(length=9), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('encrypted_content', sa.BLOB(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('metadata', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('request_id')
    )
    op.create_index('idx_messages_timestamp', 'messages', ['timestamp'], unique=False)
    op.create_index('idx_messages_session', 'messages', ['session_id'], unique=False)
    op.create_index('idx_messages_role', 'messages', ['role'], unique=False)
    op.create_index('idx_messages_request_id', 'messages', ['request_id'], unique=False)
    op.create_table('email_accounts',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('email_address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), nullable=False),
    sa.Column('quota_bytes', sa.BIGINT(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('used_bytes', sa.BIGINT(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('last_login', sa.DATETIME(), nullable=True),
    sa.Column('last_activity', sa.DATETIME(), nullable=True),
    sa.Column('settings', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_address', name='unique_email_address')
    )
    op.create_index('idx_email_accounts_user', 'email_accounts', ['user_id'], unique=False)
    op.create_index('idx_email_accounts_last_login', 'email_accounts', ['last_login'], unique=False)
    op.create_index('idx_email_accounts_active', 'email_accounts', ['is_active'], unique=False)
    op.create_table('email_prompt_templates',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('prompt_text', sa.TEXT(), nullable=False),
    sa.Column('chain_of_thought', sa.TEXT(), nullable=True),
    sa.Column('variables', sa.TEXT(), server_default=sa.text("'[]'"), nullable=False),
    sa.Column('tier_access', sa.TEXT(), server_default=sa.text('\'["business"]\''), nullable=False),
    sa.Column('automation_ready', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('usage_count', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('success_rate', sa.FLOAT(), server_default=sa.text("'0.0'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=32), nullable=True),
    sa.Column('metadata', sa.TEXT(), server_default=sa.text("'{}'"), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_prompt_templates_usage', 'email_prompt_templates', ['usage_count'], unique=False)
    op.create_index('idx_email_prompt_templates_tier_access', 'email_prompt_templates', ['tier_access'], unique=False)
    op.create_index('idx_email_prompt_templates_category', 'email_prompt_templates', ['category'], unique=False)
    op.create_index('idx_email_prompt_templates_active', 'email_prompt_templates', ['is_active'], unique=False)
    op.drop_index(op.f('ix_analytics_events_user_id'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_timestamp'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_event_type'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_content_id'), table_name='analytics_events')
    op.drop_index('ix_analytics_event_timestamp_type', table_name='analytics_events')
    op.drop_table('analytics_events')
    op.drop_index(op.f('ix_leaderboard_entries_user_id'), table_name='leaderboard_entries')
    op.drop_index(op.f('ix_leaderboard_entries_leaderboard_name'), table_name='leaderboard_entries')
    op.drop_table('leaderboard_entries')
    # ### end Alembic commands ###
