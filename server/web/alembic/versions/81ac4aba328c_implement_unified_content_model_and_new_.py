"""Implement unified content model and new services

Revision ID: 81ac4aba328c
Revises: 005_add_multi_service_platform_models
Create Date: 2025-09-15 18:12:12.123456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '81ac4aba328c'
down_revision = '005'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content',
    sa.Column('id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content_type', sa.Enum('url', 'paste', 'media', 'aichat', 'comment', 'playlist', name='contenttypeenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('privacy_level', sa.Enum('public', 'unlisted', 'private', 'password', name='privacylevelenum'), nullable=False),
    sa.Column('is_moderated', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_is_active'), 'content', ['is_active'], unique=False)
    op.create_index(op.f('ix_content_user_id'), 'content', ['user_id'], unique=False)
    op.create_index('ix_content_user_id_content_type', 'content', ['user_id', 'content_type'], unique=False)

    op.create_table('ai_chat_sessions',
    sa.Column('id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('system_prompt', sa.Text(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['content.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('url_shortener',
    sa.Column('id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('slug', sa.String(length=50), nullable=False),
    sa.Column('target_url', sa.Text(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('max_clicks', sa.Integer(), nullable=True),
    sa.Column('click_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['content.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_url_shortener_slug'), 'url_shortener', ['slug'], unique=True)
    op.create_index('ix_url_shortener_expires_at', 'url_shortener', ['expires_at'], unique=False, postgresql_where=sa.text('expires_at IS NOT NULL'))

    op.create_table('ai_chat_messages',
    sa.Column('id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('session_id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['ai_chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_chat_messages_session_id'), 'ai_chat_messages', ['session_id'], unique=False)

    op.create_table('comments',
    sa.Column('id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('parent_content_id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['content.id'], ),
    sa.ForeignKeyConstraint(['parent_content_id'], ['content.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_parent_content_id'), 'comments', ['parent_content_id'], unique=False)

    op.create_table('reactions',
    sa.Column('id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content_id', sa.dialects.postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('reaction_type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'content_id', 'reaction_type', name='_user_content_reaction_uc')
    )
    op.create_index(op.f('ix_reactions_content_id'), 'reactions', ['content_id'], unique=False)
    op.create_index(op.f('ix_reactions_user_id'), 'reactions', ['user_id'], unique=False)

    op.add_column('users', sa.Column('reputation_score', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('users', sa.Column('experience_points', sa.BigInteger(), nullable=False, server_default='0'))

    op.add_column('tier_configurations', sa.Column('allow_vanity_slugs', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('tier_configurations', sa.Column('allow_custom_domains', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('tier_configurations', sa.Column('storage_quota_gb', sa.Integer(), nullable=False, server_default='1'))
    op.add_column('tier_configurations', sa.Column('rate_limit_per_minute', sa.Integer(), nullable=False, server_default='60'))
    op.add_column('tier_configurations', sa.Column('allow_custom_reactions', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('tier_configurations', sa.Column('community_roles', postgresql.JSONB(astext_type=sa.Text()), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tier_configurations', 'community_roles')
    op.drop_column('tier_configurations', 'allow_custom_reactions')
    op.drop_column('tier_configurations', 'rate_limit_per_minute')
    op.drop_column('tier_configurations', 'storage_quota_gb')
    op.drop_column('tier_configurations', 'allow_custom_domains')
    op.drop_column('tier_configurations', 'allow_vanity_slugs')

    op.drop_column('users', 'experience_points')
    op.drop_column('users', 'reputation_score')

    op.drop_index(op.f('ix_reactions_user_id'), table_name='reactions')
    op.drop_index(op.f('ix_reactions_content_id'), table_name='reactions')
    op.drop_table('reactions')

    op.drop_index(op.f('ix_playlist_items_playlist_id'), table_name='playlist_items')
    op.drop_index(op.f('ix_playlist_items_media_file_id'), table_name='playlist_items')
    op.drop_table('playlist_items')

    op.drop_index(op.f('ix_comments_parent_content_id'), table_name='comments')
    op.drop_table('comments')

    op.drop_index(op.f('ix_ai_chat_messages_session_id'), table_name='ai_chat_messages')
    op.drop_table('ai_chat_messages')

    op.drop_index('ix_url_shortener_expires_at', table_name='url_shortener')
    op.drop_index(op.f('ix_url_shortener_slug'), table_name='url_shortener')
    op.drop_table('url_shortener')

    op.drop_table('playlists')

    op.drop_index('ix_pastes_expires_at', table_name='pastes')
    op.drop_index(op.f('ix_pastes_paste_id'), table_name='pastes')
    op.drop_table('pastes')

    op.drop_index(op.f('ix_media_files_media_id'), table_name='media_files')
    op.drop_table('media_files')

    op.drop_table('ai_chat_sessions')

    op.drop_index('ix_content_user_id_content_type', table_name='content')
    op.drop_index(op.f('ix_content_user_id'), table_name='content')
    op.drop_index(op.f('ix_content_is_active'), table_name='content')
    op.drop_table('content')
    # ### end Alembic commands ###