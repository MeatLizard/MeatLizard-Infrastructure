"""add_content_moderation_tables

Revision ID: 010_add_content_moderation_tables
Revises: 009_add_video_permissions_table
Create Date: 2024-01-15 11:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '010_add_content_moderation_tables'
down_revision = '009_add_video_permissions_table'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content_reports',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('reporter_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('content_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('evidence_urls', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('resolved_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolution_action', sa.String(length=50), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['reporter_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_reports_content_id'), 'content_reports', ['content_id'], unique=False)
    op.create_index(op.f('ix_content_reports_created_at'), 'content_reports', ['created_at'], unique=False)
    op.create_index(op.f('ix_content_reports_reporter_id'), 'content_reports', ['reporter_id'], unique=False)
    op.create_index(op.f('ix_content_reports_status'), 'content_reports', ['status'], unique=False)
    
    op.create_table('moderation_records',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('content_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=False),
    sa.Column('moderator_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('duration_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['moderator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moderation_records_content_id'), 'moderation_records', ['content_id'], unique=False)
    op.create_index(op.f('ix_moderation_records_created_at'), 'moderation_records', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_moderation_records_created_at'), table_name='moderation_records')
    op.drop_index(op.f('ix_moderation_records_content_id'), table_name='moderation_records')
    op.drop_table('moderation_records')
    op.drop_index(op.f('ix_content_reports_status'), table_name='content_reports')
    op.drop_index(op.f('ix_content_reports_reporter_id'), table_name='content_reports')
    op.drop_index(op.f('ix_content_reports_created_at'), table_name='content_reports')
    op.drop_index(op.f('ix_content_reports_content_id'), table_name='content_reports')
    op.drop_table('content_reports')
    # ### end Alembic commands ###